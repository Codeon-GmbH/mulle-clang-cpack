#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

# this script is run in the VM

VERSION="${VERSION:-14.0.6.2}"
RC="${RC}"
MAKETOOL="${MAKETOOL:-ninja}"
DIST="`lsb_release -sc 2> /dev/null`"
CC="${CC:-clang}"
CXX="${CXX:-clang++}"


clean()
{
   if [ -d mono ]
   then
      rm -rf mono
   fi

   rm *.deb 2> /dev/null
   mkdir mono
   mkdir -p mono/opt/mulle-clang-project
   if [ ! -e /opt/mulle-clang-project ]
   then
      sudo ln -s "$PWD/mono/opt/mulle-clang-project" "/opt/mulle-clang-project"
   fi
}


download()
{
   url="https://github.com/mulle-objc/mulle-clang-project/archive/${VERSION}${RC}.tar.gz"
   (
      cd mono &&
      echo "Downloading ${url}" >&2 &&
      wget -O - "${url}" | tar xfz - &&
      mv "mulle-clang-project-${VERSION}${RC}" "mulle-clang-project"
   )
}


build()
{
   (
      cd mono &&
      mkdir -p "opt/mulle-clang/${VERSION}${RC}" &&
      VERSION="${VERSION}" \
      RC="${RC}" \
      CC="${CC}" \
      CXX="${CXX}" \
         ./mulle-clang-project/clang/bin/cmake-${MAKETOOL}.linux
   )
}


verpack()
{
   cp "mulle-clang-cpack/CMakeLists.txt" \
      "mulle-clang-cpack/generate-package" \
      "mono/" &&

   (
      cd mono &&
      chmod 755 generate-package &&
      VERSION="${VERSION}" ./generate-package &&
      mv "package/mulle-clang-${VERSION}${RC}-Linux.deb" "../mulle-clang-${VERSION}${RC}-${DIST}-amd64.deb" &&

      echo "Debian Package \"mulle-clang-${VERSION}${RC}-${DIST}-amd64.deb\" ready" >&2
   )
}


#
# hmm
#
upload()
{
   scp "mulle-clang-${VERSION}${RC}-${DIST}-amd64.deb" \
       "oswald.codeon.de:debian-software/dists/${DIST}/main/binary-amd64/"
}


main()
{
   while [ $# -ne 0 ]
   do
      echo "====== $1 ======" >&2
      if ! "$1"
      then
         echo "$1 failed" >&2
         exit 1
      fi
      shift
   done
}


echo "====== version ======" >&2
echo "VERSION=${VERSION}" >&2
echo "RC=${RC}" >&2

# prefer clang (or whats passed in), but fallback to system default
if [ -z "`command -v "${CC:-clang}" `" ]
then
   unset CC
fi

if [ -z "`command -v "${CXX:-clang++}" `" ]
then
   unset CXX
fi

if [ $# -eq 0 ]
then
   main clean download build verpack
else
   main "$@"
fi

